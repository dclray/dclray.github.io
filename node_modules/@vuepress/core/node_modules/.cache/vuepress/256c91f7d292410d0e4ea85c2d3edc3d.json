{"remainingRequest":"D:\\dclray.github.io\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\dclray.github.io\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\dclray.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dclray.github.io\\node_modules\\vuepress-theme-reco\\components\\NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\dclray.github.io\\node_modules\\vuepress-theme-reco\\components\\NavLinks.vue","mtime":1626087980639},{"path":"D:\\dclray.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625882902421},{"path":"D:\\dclray.github.io\\node_modules\\babel-loader\\lib\\index.js","mtime":1625882902417},{"path":"D:\\dclray.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625882902421},{"path":"D:\\dclray.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1625891822069}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJEOi9kY2xyYXkuZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wYXJzZS1pbnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubGluay5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCBjb21wdXRlZCwgZ2V0Q3VycmVudEluc3RhbmNlIH0gZnJvbSAndnVlLWRlbWknOwppbXBvcnQgeyBSZWNvSWNvbiB9IGZyb20gJ0B2dWVwcmVzcy1yZWNvL2NvcmUvbGliL2NvbXBvbmVudHMnOwppbXBvcnQgRHJvcGRvd25MaW5rIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL0Ryb3Bkb3duTGluayc7CmltcG9ydCB7IHJlc29sdmVOYXZMaW5rSXRlbSB9IGZyb20gJ0B0aGVtZS9oZWxwZXJzL3V0aWxzJzsKaW1wb3J0IE5hdkxpbmsgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2TGluayc7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgTmF2TGluazogTmF2TGluaywKICAgIERyb3Bkb3duTGluazogRHJvcGRvd25MaW5rLAogICAgUmVjb0ljb246IFJlY29JY29uCiAgfSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMsIGN0eCkgewogICAgdmFyIGluc3RhbmNlID0gZ2V0Q3VycmVudEluc3RhbmNlKCkucHJveHk7CiAgICB2YXIgdXNlck5hdiA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGluc3RhbmNlLiR0aGVtZUxvY2FsZUNvbmZpZy5uYXYgfHwgaW5zdGFuY2UuJHRoZW1lQ29uZmlnLm5hdiB8fCBbXTsKICAgIH0pOwogICAgdmFyIG5hdiA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGxvY2FsZXMgPSBpbnN0YW5jZS4kc2l0ZS5sb2NhbGVzIHx8IHt9OwoKICAgICAgaWYgKGxvY2FsZXMgJiYgT2JqZWN0LmtleXMobG9jYWxlcykubGVuZ3RoID4gMSkgewogICAgICAgIHZhciBjdXJyZW50TGluayA9IGluc3RhbmNlLiRwYWdlLnBhdGg7CiAgICAgICAgdmFyIHJvdXRlcyA9IGluc3RhbmNlLiRyb3V0ZXIub3B0aW9ucy5yb3V0ZXM7CiAgICAgICAgdmFyIHRoZW1lTG9jYWxlcyA9IGluc3RhbmNlLiR0aGVtZUNvbmZpZy5sb2NhbGVzIHx8IHt9OwogICAgICAgIHZhciBsYW5ndWFnZURyb3Bkb3duID0gewogICAgICAgICAgdGV4dDogaW5zdGFuY2UuJHRoZW1lTG9jYWxlQ29uZmlnLnNlbGVjdFRleHQgfHwgJ0xhbmd1YWdlcycsCiAgICAgICAgICBpdGVtczogT2JqZWN0LmtleXMobG9jYWxlcykubWFwKGZ1bmN0aW9uIChwYXRoKSB7CiAgICAgICAgICAgIHZhciBsb2NhbGUgPSBsb2NhbGVzW3BhdGhdOwogICAgICAgICAgICB2YXIgdGV4dCA9IHRoZW1lTG9jYWxlc1twYXRoXSAmJiB0aGVtZUxvY2FsZXNbcGF0aF0ubGFiZWwgfHwgbG9jYWxlLmxhbmc7CiAgICAgICAgICAgIHZhciBsaW5rOyAvLyBTdGF5IG9uIHRoZSBjdXJyZW50IHBhZ2UKCiAgICAgICAgICAgIGlmIChsb2NhbGUubGFuZyA9PT0gaW5zdGFuY2UuJGxhbmcpIHsKICAgICAgICAgICAgICBsaW5rID0gY3VycmVudExpbms7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gVHJ5IHRvIHN0YXkgb24gdGhlIHNhbWUgcGFnZQogICAgICAgICAgICAgIGxpbmsgPSBjdXJyZW50TGluay5yZXBsYWNlKGluc3RhbmNlLiRsb2NhbGVDb25maWcucGF0aCwgcGF0aCk7IC8vIGZhbGxiYWNrIHRvIGhvbWVwYWdlCgogICAgICAgICAgICAgIGlmICghcm91dGVzLnNvbWUoZnVuY3Rpb24gKHJvdXRlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcm91dGUucGF0aCA9PT0gbGluazsKICAgICAgICAgICAgICB9KSkgewogICAgICAgICAgICAgICAgbGluayA9IHBhdGg7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIHRleHQ6IHRleHQsCiAgICAgICAgICAgICAgbGluazogbGluawogICAgICAgICAgICB9OwogICAgICAgICAgfSkKICAgICAgICB9OwogICAgICAgIHJldHVybiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHVzZXJOYXYudmFsdWUpLCBbbGFuZ3VhZ2VEcm9wZG93bl0pOwogICAgICB9IC8vIGJsb2dDb25maWcg55qE5aSE55CG77yM5qC557ud6YWN572u6Ieq5Yqo5re75Yqg5YiG57G75ZKM5qCH562+CgoKICAgICAgdmFyIGJsb2dDb25maWcgPSBpbnN0YW5jZS4kdGhlbWVDb25maWcuYmxvZ0NvbmZpZyB8fCB7fTsKICAgICAgdmFyIGlzSGFzQ2F0ZWdvcnkgPSB1c2VyTmF2LnZhbHVlLnNvbWUoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoYmxvZ0NvbmZpZy5jYXRlZ29yeSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0udGV4dCA9PT0gKGJsb2dDb25maWcuY2F0ZWdvcnkudGV4dCB8fCAn5YiG57G7Jyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHZhciBpc0hhc1RhZyA9IHVzZXJOYXYudmFsdWUuc29tZShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGlmIChibG9nQ29uZmlnLnRhZykgewogICAgICAgICAgcmV0dXJuIGl0ZW0udGV4dCA9PT0gKGJsb2dDb25maWcudGFnLnRleHQgfHwgJ+agh+etvicpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgaWYgKCFpc0hhc0NhdGVnb3J5ICYmIE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKGJsb2dDb25maWcsICdjYXRlZ29yeScpKSB7CiAgICAgICAgdmFyIGNhdGVnb3J5ID0gYmxvZ0NvbmZpZy5jYXRlZ29yeTsKICAgICAgICB2YXIgJGNhdGVnb3JpZXMgPSBpbnN0YW5jZS4kY2F0ZWdvcmllczsKICAgICAgICB1c2VyTmF2LnZhbHVlLnNwbGljZShwYXJzZUludChjYXRlZ29yeS5sb2NhdGlvbiB8fCAyKSAtIDEsIDAsIHsKICAgICAgICAgIGl0ZW1zOiAkY2F0ZWdvcmllcy5saXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBpdGVtLmxpbmsgPSBpdGVtLnBhdGg7CiAgICAgICAgICAgIGl0ZW0udGV4dCA9IGl0ZW0ubmFtZTsKICAgICAgICAgICAgcmV0dXJuIGl0ZW07CiAgICAgICAgICB9KSwKICAgICAgICAgIHRleHQ6IGNhdGVnb3J5LnRleHQgfHwgaW5zdGFuY2UuJHJlY29Mb2NhbGVzLmNhdGVnb3J5LAogICAgICAgICAgdHlwZTogJ2xpbmtzJywKICAgICAgICAgIGljb246ICdyZWNvLWNhdGVnb3J5JwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAoIWlzSGFzVGFnICYmIE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKGJsb2dDb25maWcsICd0YWcnKSkgewogICAgICAgIHZhciB0YWcgPSBibG9nQ29uZmlnLnRhZzsKICAgICAgICB1c2VyTmF2LnZhbHVlLnNwbGljZShwYXJzZUludCh0YWcubG9jYXRpb24gfHwgMykgLSAxLCAwLCB7CiAgICAgICAgICBsaW5rOiAnL3RhZy8nLAogICAgICAgICAgdGV4dDogdGFnLnRleHQgfHwgaW5zdGFuY2UuJHJlY29Mb2NhbGVzLnRhZywKICAgICAgICAgIHR5cGU6ICdsaW5rcycsCiAgICAgICAgICBpY29uOiAncmVjby10YWcnCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB1c2VyTmF2LnZhbHVlOwogICAgfSk7CiAgICB2YXIgdXNlckxpbmtzID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gKGluc3RhbmNlLm5hdiB8fCBbXSkubWFwKGZ1bmN0aW9uIChsaW5rKSB7CiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocmVzb2x2ZU5hdkxpbmtJdGVtKGxpbmspLCB7CiAgICAgICAgICBpdGVtczogKGxpbmsuaXRlbXMgfHwgW10pLm1hcChyZXNvbHZlTmF2TGlua0l0ZW0pCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSk7CiAgICB2YXIgcmVwb0xpbmsgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciByZXBvID0gaW5zdGFuY2UuJHRoZW1lQ29uZmlnLnJlcG87CgogICAgICBpZiAocmVwbykgewogICAgICAgIHJldHVybiAvXmh0dHBzPzovLnRlc3QocmVwbykgPyByZXBvIDogImh0dHBzOi8vZ2l0aHViLmNvbS8iLmNvbmNhdChyZXBvKTsKICAgICAgfQoKICAgICAgcmV0dXJuICcnOwogICAgfSk7CiAgICB2YXIgcmVwb0xhYmVsID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICBpZiAoIWluc3RhbmNlLnJlcG9MaW5rKSByZXR1cm4gJyc7CgogICAgICBpZiAoaW5zdGFuY2UuJHRoZW1lQ29uZmlnLnJlcG9MYWJlbCkgewogICAgICAgIHJldHVybiBpbnN0YW5jZS4kdGhlbWVDb25maWcucmVwb0xhYmVsOwogICAgICB9CgogICAgICB2YXIgcmVwb0hvc3QgPSBpbnN0YW5jZS5yZXBvTGluay5tYXRjaCgvXmh0dHBzPzpcL1wvW14vXSsvKVswXTsKICAgICAgdmFyIHBsYXRmb3JtcyA9IFsnR2l0SHViJywgJ0dpdExhYicsICdCaXRidWNrZXQnXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGxhdGZvcm1zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIHBsYXRmb3JtID0gcGxhdGZvcm1zW2ldOwoKICAgICAgICBpZiAobmV3IFJlZ0V4cChwbGF0Zm9ybSwgJ2knKS50ZXN0KHJlcG9Ib3N0KSkgewogICAgICAgICAgcmV0dXJuIHBsYXRmb3JtOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuICdTb3VyY2UnOwogICAgfSk7CiAgICByZXR1cm4gewogICAgICB1c2VyTmF2OiB1c2VyTmF2LAogICAgICBuYXY6IG5hdiwKICAgICAgdXNlckxpbmtzOiB1c2VyTGlua3MsCiAgICAgIHJlcG9MaW5rOiByZXBvTGluaywKICAgICAgcmVwb0xhYmVsOiByZXBvTGFiZWwKICAgIH07CiAgfQp9KTs="},null]}