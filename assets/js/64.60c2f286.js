(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{586:function(t,e,r){"use strict";r.r(e);var v=r(6),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"函数执行上下文的创建"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数执行上下文的创建"}},[t._v("#")]),t._v(" 函数执行上下文的创建")]),t._v(" "),r("p",[t._v("当我们启动程序时，我们从全局执行上下文中开始。一些变量是在全局执行上下文中声明的，我们称之为全局变量。当程序调用一个函数时，会发生什么？"),r("br")]),t._v(" "),r("ol",[r("li",[t._v("JavaScript创建一个新的执行上下文，我们叫做函数执行上下文")]),t._v(" "),r("li",[t._v("这个函数执行上下文将有它自己的一组变量，这些变量将是这个执行上下文的本地变量")]),t._v(" "),r("li",[t._v("新的执行上下文被推到执行栈中，可以将执行栈看作是一种保存程序在执行中的位置的容器\n函数结束时，当引擎遇到一个"),r("code",[t._v("return")]),t._v("语句或一个结束括号")]),t._v(" "),r("li",[t._v("这个函数执行上下文从执行栈中被弹出")]),t._v(" "),r("li",[t._v("函数将返回值返回调用上下文，调用上下文是调用这个函数的执行上下文，它可以是全局执行上下文也可以是另外一个函数的执行上下文。这时调用执行上下文来处理此时的返回值，返回的值可以时一个对象、一个数组等等，如果函数没有return语句，则返回"),r("code",[t._v("undefined")]),t._v(".")]),t._v(" "),r("li",[t._v("这个函数执行上下文被销毁，销毁很重要，这个函数执行上下文中声明的所有变量都将被删除，不在有变量，这个就是为什么称函数执行上下文中变量为自由变量。")])]),t._v(" "),r("p",[t._v("JavaScript的一个复杂之处在于它如何查找变量，如果在函数执行上下文中找不到变量，它将在调用上下文中寻找它，如果在它的调用上下文中没有找到，就一直往上，直到它在全局执行上下文中查找为止，如果最后找不到，它就是 "),r("code",[t._v("refrenceError")])])])}),[],!1,null,null,null);e.default=_.exports}}]);