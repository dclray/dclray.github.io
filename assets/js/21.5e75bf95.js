(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{538:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"为什么要使用路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用路由"}},[t._v("#")]),t._v(" 为什么要使用路由")]),t._v(" "),a("p",[t._v("现在网络应用程序越来越多的使用AJAX异步请求完成页面的无缝刷新，导致浏览器的URL不会发生生任何变化而完成了请求，从而提高了用户浏览的体验。同时本次浏览的页面内容在用户下次使用URL访问时将无法重新呈现，使用路由就可以很好的解决这个问题。"),a("br"),t._v("\n单页面应用利用了JavaScript动态变化网页内容，避免了页面重载；路由提供了浏览器地址变化，网页内容也跟随变化，两者结合起来则为我们提供了体验良好的单页面web应用。")]),t._v(" "),a("h2",{attrs:{id:"前端路由实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端路由实现方式"}},[t._v("#")]),t._v(" 前端路由实现方式")]),t._v(" "),a("p",[t._v("路由需要实现三个功能：")]),t._v(" "),a("ol",[a("li",[t._v("当浏览器地址变化时，切换页面；")]),t._v(" "),a("li",[t._v("点击浏览器【后退】、【前进】按钮，网页内容跟随变化；")]),t._v(" "),a("li",[t._v("刷新浏览器，网页加载当前路由对应内容")])]),t._v(" "),a("p",[t._v("在单页面web网页中，单纯的浏览器地址改变，网页不会重载，如单纯的hash网址改变网页不会变化，因此我们的路由主要时通过监听事件，并利用js实现动态改变网页内容，有两种实现方式：")]),t._v(" "),a("ul",[a("li",[t._v("hash模式：监听浏览器地址hash值变化，执行相应的js切换网页")]),t._v(" "),a("li",[t._v("history模式：利用history API实现URL地址改变，网页内容改变")])]),t._v(" "),a("p",[t._v("它们的区别最明显的就是hash回在浏览器地址后面增加#号，而history可以自定义地址")]),t._v(" "),a("h2",{attrs:{id:"hash模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[t._v("#")]),t._v(" hash模式")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("window.location.hash")]),t._v("属性及窗口的"),a("code",[t._v("onhashchage")]),t._v("事件，可以实现监听浏览器地址hash值变化，执行相应的js切换网页。下面具体介绍介个使用过程中必须理解的要点：")]),t._v(" "),a("ol",[a("li",[t._v("hash指的是地址中#号以及后面的字符，也称为散列值。hash也称作锚点，本身是用来做页面跳转定位的。如http://localhost/index.html#abc，这里的#abc就是hash;")]),t._v(" "),a("li",[t._v("散列值是不会随请求发送到服务器端的，所以改变hash，不会重新加载页面")]),t._v(" "),a("li",[t._v("监听window的hashchange事件，当散列值改变时，可以通过location.hash来获取和设置的hash值")]),t._v(" "),a("li",[t._v("location.hash值的改变会直接反应到浏览器地址栏")])]),t._v(" "),a("h2",{attrs:{id:"触发hashchange事件的几种情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发hashchange事件的几种情况"}},[t._v("#")]),t._v(" 触发hashchange事件的几种情况：")]),t._v(" "),a("ul",[a("li",[t._v("浏览器地址栏散列值的变化（包括浏览器的前进、后退）会触发window.location.hash值的变化，从而触发onhashchange事件；")]),t._v(" "),a("li",[t._v("当浏览器地址栏中URL包含哈希如"),a("code",[t._v("http://www.baidu.com/#home")]),t._v("，这是按下输入，浏览器发送"),a("code",[t._v("http://www.baidu.com/")]),t._v("请求至服务器，请求完毕之后设置散列值为#home，进而触发"),a("code",[t._v("onhashchange")]),t._v("事件；")]),t._v(" "),a("li",[t._v("当只改变浏览器地址栏URL的哈希部分，这时按下回车，浏览器不会发送任何请求至服务器，这时发生的只是散列值新修改的哈希值，并触发"),a("code",[t._v("onhashchange")]),t._v("事件")]),t._v(" "),a("li",[t._v("html中a标签的属性href可以设置为页面的元素ID如#top，当点击该链接时页面跳转至该id元素所在区域，同时浏览器自动设置"),a("code",[t._v("window.location.hash")]),t._v("属性，地址栏中的哈希值也会改变，并触发"),a("code",[t._v("onhashchange")]),t._v("事件")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置url的hash，回在当前url后加上#abc")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hash  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '#abc'")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hashchange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听hash变化，点击浏览器的前进后退会触发")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"history模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[t._v("#")]),t._v(" history模式")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("window.history")]),t._v("属性指向History对象，它表示当前窗口的浏览历史。当发生改变时，只会改变页面的路径，不会刷新页面")]),t._v(" "),a("li",[t._v("History对象保存了当前窗口访问过所有页面网址。通过"),a("code",[t._v("history.length")]),t._v("可以得出当前窗口一共访问过几个网址")]),t._v(" "),a("li",[t._v("由于安全原因，浏览器不允许脚本读取这些地址，但是允许在地址之间导航")]),t._v(" "),a("li",[t._v("浏览器工具栏的“前进”和“后退”按钮，其实就是对History对象进行操作")])]),t._v(" "),a("p",[t._v("History对象主要有两个属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("window.history.length")]),t._v("：当前窗口访问过的网址数量（包括当前网页）")]),t._v(" "),a("li",[a("code",[t._v("window.history.state")]),t._v("：History堆栈最上层的状态值")])]),t._v(" "),a("p",[t._v("History对象的方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("window.history.back()")]),t._v("：移动到上一个网址，等同于点击浏览器的回退按钮。对于第一个访问的网址，该方法无效")]),t._v(" "),a("li",[a("code",[t._v("window.history.forward()")]),t._v("：移动到下一个网址，等同于点击浏览器的前进按钮。对于最后一个访问的网址，该方法无效")]),t._v(" "),a("li",[a("code",[t._v("window.history.go()")]),t._v("：接受一个整数位参数，以当前网址为基准，移动到参数指定的网址。如果参数超过实际存在的网址范围，该方法无效；如果不指定参数，默认参数为0，相当于刷新页面。")]),t._v(" "),a("li",[a("code",[t._v("window.history.pushState()")]),t._v("：该方法用于在历史中添加一条记录。"),a("code",[t._v("pushState()")]),t._v("方法不会触发页面刷新，只是导致History对象发生变化，地址栏不会有变化。")]),t._v(" "),a("li",[a("code",[t._v("window.history.replaceState()")]),t._v("：该方法用来修改History对象当前的记录，用法与"),a("code",[t._v("pushState()")]),t._v("方法一样。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("移动到以前访问过的页面时，页面通常是从浏览器缓存之中加载，而不是重新要求服务器发送新的网页")])]),a("p",[t._v("History对象发生变化时触发的事件：popstate")]),t._v(" "),a("h2",{attrs:{id:"window-history-pushstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window-history-pushstate"}},[t._v("#")]),t._v(" window.history.pushState()")]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("window.history.pushState(object,title,url)")]),a("br"),t._v("\n该方法接受三个参数，依次为：")]),t._v(" "),a("ul",[a("li",[t._v("object：是一个对象，通过"),a("code",[t._v("pushState")]),t._v("方法可以将该对象内容传递到新页面中。如果不需要这个对象，此处可以填null。")]),t._v(" "),a("li",[t._v("title：指标题，几乎没有浏览器支持该参数，传一个空字符串比较安全")]),t._v(" "),a("li",[t._v("url：新的网址，"),a("strong",[t._v("必须与当前页面处在同一个域")]),t._v("。不指定的话则为当前的路径，如果设置了一个跨域网址，则会报错。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("如果pushState的URL参数设置了一个新的锚点值（即hash），并不会触发"),a("code",[t._v("hasnchange")]),t._v("事件。反过来，如果URL的锚点值变了，则会在History对象创建一条浏览记录。\npushState想要插入一个跨域的网址，导致报错。这样设计的目的是，防止恶意代码让用户以为他们是在同一个网站上，因为这个方法不会导致页面跳转")])]),a("h2",{attrs:{id:"window-history-replacestate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window-history-replacestate"}},[t._v("#")]),t._v(" window.history.replaceState()")]),t._v(" "),a("p",[t._v("假定当前网页是"),a("code",[t._v("example.com/example.html")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?page=1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// url显示为http://example.com/example.html?page=1")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"?page=2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// url显示为http://example.com/example.html?page=2")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?page=3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// url显示为http://example.com/example.html?page=3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"popstate事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#popstate事件"}},[t._v("#")]),t._v(" popstate事件")]),t._v(" "),a("p",[t._v("每当history对象发生变化时，就会触发"),a("code",[t._v("popstate")]),t._v("事件")]),t._v(" "),a("ul",[a("li",[t._v("仅仅调用"),a("code",[t._v("pushState()")]),t._v("方法或"),a("code",[t._v("replaceState()")]),t._v("方法，并不会触发该事件")]),t._v(" "),a("li",[t._v("只有用户点击浏览器倒退按钮和前进按钮，或者使用JavaScript调用"),a("code",[t._v("history.back()")]),t._v("、"),a("code",[t._v("history.forward()")]),t._v("、"),a("code",[t._v("history.go()")]),t._v("方法时才会触发。")]),t._v(" "),a("li",[t._v("另外，该事件只针对同一个同一个文档，如果浏览历史的切换，导致加载不同的文档，该事件也不会触发。")]),t._v(" "),a("li",[t._v("页面第一次加载的时候，浏览器不会触发"),a("code",[t._v("popstate")]),t._v("事件")])]),t._v(" "),a("p",[t._v("使用的时候，可以为"),a("code",[t._v("popstate")]),t._v("事件指定回调函数")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'popstate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// e.state 相当于 history.state")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringfy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("缺点：当改变页面地址后，强制刷新浏览器时，（如果后端没有做准备的话）会报错，因为刷新时那当前地址去请求服务器的，如果服务器中没有相应的页面，会出现404页面")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("hash模式主要是通过监听hashchange事件获得hash值的改变，从而改变网页的内容")]),t._v(" "),a("li",[t._v("history模式主要是通过监听popstate事件获得history对象的改变，从而改变网页的内容")])])])}),[],!1,null,null,null);s.default=e.exports}}]);