(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{550:function(r,e,o){"use strict";o.r(e);var t=o(6),n=Object(t.a)({},(function(){var r=this,e=r.$createElement,o=r._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("h2",{attrs:{id:"docker"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[r._v("#")]),r._v(" Docker")]),r._v(" "),o("p",[r._v("Docker包括三个基本概念")]),r._v(" "),o("ul",[o("li",[o("strong",[r._v("镜像（Image）")]),r._v("：Docker镜像，就相当于是一个root文件系统。")]),r._v(" "),o("li",[o("strong",[r._v("容器（Container）")]),r._v("：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行的实体。容器可以被创建、启动、停止、删除、暂停等。")]),r._v(" "),o("li",[o("strong",[r._v("仓库（Repository）")]),r._v("：仓库可看成一个代码控制中心，用来保存镜像的。\nDocker 使用客户端-服务器（C/S）架构模式，使用远程API来管理和创建Docker容器。\nDocker容器通过Docker镜像来创建\ndocker进入容器 docker exec")])]),r._v(" "),o("p",[o("a",{attrs:{href:"https://www.runoob.com/docker/docker-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("Docker菜鸟教程"),o("OutboundLink")],1),o("br")])])}),[],!1,null,null,null);e.default=n.exports}}]);